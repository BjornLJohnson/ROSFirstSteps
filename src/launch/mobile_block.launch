<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find testing)/urdf/mobile_block.urdf.xacro"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <param name="mobile_block/robot_description" command="$(find xacro)/xacro.py $(arg model)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 1.0 -unpause -urdf -model robot -param mobile_block/robot_description" respawn="false" output="screen" />

  <node pkg="robot_state_publisher" type="robot_state_publisher"
    name="robot_state_publisher_obsolete"  ns="/mobile_block">
    <param name="publish_frequency" type="double" value="30.0"/>
  </node>

<!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find testing)/config/simple_control.yaml" command="load" ns="/mobile_block"/>
  
  <rosparam command="load" file="$(find testing)/config/diff_drive.yaml"
            ns="/mobile_block/diff_drive_controller" />
            
  <rosparam command="load" file="$(find testing)/config/joints.yaml"
            ns="/mobile_block/joint_state_controller" />

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/mobile_block" args="diff_drive_controller joint_state_controller"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen" ns="/mobile_block">
    <remap from="/joint_states" to="/mobile_block/joint_states" />
  </node>

  <node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
    <param name="default_topic" value="/mobile_block/diff_drive_controller/cmd_vel"/>
  </node>

</launch>
